# GitHub Actions workflow to deploy a Vite-based static site to S3 based on branch
name: Deploy Website to S3

# Trigger this workflow on push to main, hml, or dev branches
on:
  push:
    branches:
      - main
      - hml
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Step 3: Install project dependencies using package-lock.json
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the project (uses Vite's default build script)
      - name: Build project
        run: npm run build

      # Step 5: Map branch name to a deployment environment
      - name: Set environment context based on branch
        id: envmap
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "env=PROD" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "hml" ]]; then
            echo "env=HML" >> $GITHUB_OUTPUT
          else
            echo "env=DEV" >> $GITHUB_OUTPUT
          fi

      # Step 6: Configure AWS credentials based on the environment
      # These secrets must be defined in GitHub under each environment's secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', steps.envmap.outputs.env)] }}
          aws-secret-access-key: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', steps.envmap.outputs.env)] }}
          aws-region: us-east-1

      # Step 7: Deploy built files to the appropriate S3 bucket
      # The variable 'bucket_name' must be defined in each environment's variables
      - name: Deploy static site to S3
        env:
          BUCKET_NAME: ${{ vars.bucket_name }}
        run: |
          aws s3 sync dist/ s3://$BUCKET_NAME --delete
